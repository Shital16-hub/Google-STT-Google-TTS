# Technical Support Agent Configuration
# Specialized agent for technical troubleshooting, product support, and system guidance

agent_id: "technical-support"
version: "1.0.0"
status: "active"
last_updated: "2025-01-15T10:30:00Z"

# Agent Metadata
metadata:
  name: "Technical Support Specialist"
  description: "Expert technical support for product troubleshooting and system assistance"
  priority_level: 3  # Standard priority (1-5 scale)
  category: "technical_services"
  tags: ["technical", "troubleshooting", "support", "systems", "products"]

# Vector Database Configuration
vector_config:
  qdrant_collection: "technical_support_v1"
  vector_size: 1536  # OpenAI ada-002 embedding dimensions
  distance_metric: "cosine"
  
  # Performance optimization settings
  faiss_promotion_threshold: 100  # queries/hour to promote to FAISS hot tier
  redis_cache_ttl: 600  # seconds (10 minutes for technical solutions)
  auto_optimize_schedule: "0 3 * * *"  # Daily optimization at 3 AM
  
  # Technical support caching
  solution_cache_ttl: 1800      # 30 minutes for solutions
  troubleshooting_cache_ttl: 900  # 15 minutes for troubleshooting steps
  product_info_cache_ttl: 3600   # 1 hour for product information

# Knowledge Base Sources
knowledge_sources:
  - type: "documents"
    path: "kb/technical/"
    categories:
      - "troubleshooting_guides"
      - "product_manuals"
      - "system_documentation"
      - "installation_guides"
      - "configuration_procedures"
      - "error_resolution"
      - "best_practices"
    auto_update: true
    update_schedule: "0 */8 * * *"  # Every 8 hours
    
  - type: "api"
    name: "product_documentation_api"
    endpoint: "https://api.docs.internal/technical"
    auth_type: "api_key"
    auth_key_env: "DOCS_API_KEY"
    refresh_interval: 3600  # 1 hour
    
  - type: "database"
    name: "known_issues"
    connection_string_env: "TECHNICAL_DB_CONNECTION"
    query: "SELECT * FROM known_issues WHERE status = 'active'"
    refresh_interval: 1800  # 30 minutes
    
  - type: "external_api"
    name: "system_status"
    endpoint: "https://status.api.internal/services"
    auth_type: "bearer_token"
    auth_token_env: "STATUS_API_TOKEN"
    refresh_interval: 300  # 5 minutes
    
  - type: "git_repository"
    name: "technical_scripts"
    repository_url: "https://github.com/company/technical-support-scripts"
    branch: "main"
    auth_token_env: "GITHUB_TOKEN"
    refresh_interval: 7200  # 2 hours

# Agent Specialization Configuration
specialization:
  system_prompt: |
    You are a skilled technical support specialist with expertise in troubleshooting complex technical issues and guiding users through solutions.
    
    CORE RESPONSIBILITIES:
    - Diagnose technical problems systematically and methodically
    - Provide step-by-step troubleshooting guidance
    - Explain technical concepts in user-friendly language
    - Create support tickets for complex issues requiring escalation
    - Guide users through installations, configurations, and updates
    - Identify patterns in technical issues for proactive resolution
    
    TECHNICAL APPROACH:
    - Start with basic diagnostics before moving to complex solutions
    - Ask clarifying questions to understand the user's technical level
    - Provide multiple solution paths when possible
    - Always verify solutions worked before closing the interaction
    - Document successful resolutions for future reference
    - Know when to escalate to specialized engineering teams
    
    COMMUNICATION STYLE:
    - Patient and methodical, especially with non-technical users
    - Break down complex procedures into simple steps
    - Use analogies to explain technical concepts when helpful
    - Confirm understanding at each major step
    - Provide written summaries of solutions when requested
    
    SAFETY GUIDELINES:
    - Always warn about potential data loss before suggesting risky procedures
    - Recommend backups before major changes
    - Never suggest solutions that could compromise security
    - Escalate hardware issues that might pose safety risks
    
    TROUBLESHOOTING METHODOLOGY:
    1. Gather information about the problem and environment
    2. Reproduce the issue if possible
    3. Start with simplest/most common solutions
    4. Test each solution step by step
    5. Document what worked for future reference
    
    Always end technical sessions by asking: "Is there anything else I can help you troubleshoot today?"
    
  max_context_tokens: 3072  # Larger context for complex technical discussions
  response_style: "instructional_patient"
  temperature: 0.2  # Lower temperature for consistent technical guidance
  max_response_tokens: 300  # Detailed responses for step-by-step instructions
  
  # Technical support patterns
  technical_patterns:
    error_reporting: ["error", "bug", "issue", "problem", "not working", "broken"]
    installation_help: ["install", "setup", "configure", "deployment"]
    how_to_questions: ["how do I", "how to", "steps to", "guide me", "walk me through"]
    system_issues: ["slow", "crash", "freeze", "hang", "performance", "memory"]
    connectivity_problems: ["can't connect", "network", "internet", "offline", "timeout"]
    
  # Complexity assessment keywords
  complexity_indicators:
    beginner: ["new to", "first time", "don't understand", "simple way"]
    intermediate: ["familiar with", "usually work with", "tried before"]
    advanced: ["experienced", "technical background", "developer", "admin"]

# Voice Configuration
voice_settings:
  tts_voice: "en-US-Neural2-A"  # Clear, instructional male voice
  speaking_rate: 0.9   # Slightly slower for technical instructions
  pitch: 0.0
  volume_gain_db: 1.5  # Clear volume for instructions
  personality: "patient_instructor"
  
  # Technical instruction settings
  instruction_mode:
    speaking_rate: 0.85  # Even slower for step-by-step instructions
    pause_between_steps: 1.2  # Longer pauses between steps
    emphasis_on_warnings: true
    spell_out_technical_terms: true
    confirm_understanding: true

# Tool Integration Configuration
tools:
  - name: "create_support_ticket"
    type: "ticketing_system"
    description: "Create support ticket for complex technical issues"
    endpoint: "/api/tickets/create"
    provider: "zendesk"
    timeout: 8000
    parameters:
      required: ["issue_description", "customer_info", "priority"]
      optional: ["category", "assigned_team", "attachments"]
    priority_mapping:
      critical: "system_down"
      high: "major_functionality_impacted"
      medium: "minor_functionality_impacted"
      low: "general_inquiry"
    
  - name: "run_diagnostic_script"
    type: "system_diagnostic"
    description: "Run automated diagnostic scripts for common issues"
    timeout: 30000  # 30 seconds for diagnostics
    security_level: "sandboxed"
    parameters:
      required: ["diagnostic_type", "system_info"]
      optional: ["specific_components", "output_format"]
    available_diagnostics:
      - "network_connectivity"
      - "system_performance"
      - "application_health"
      - "database_connectivity"
      - "api_endpoint_status"
    
  - name: "search_knowledge_base"
    type: "knowledge_search"
    description: "Search technical knowledge base for solutions"
    timeout: 5000
    parameters:
      required: ["search_query", "category"]
      optional: ["difficulty_level", "product_version"]
    search_categories:
      - "troubleshooting"
      - "installation"
      - "configuration"
      - "best_practices"
      - "known_issues"
    ranking_factors:
      - "relevance_score"
      - "solution_success_rate"
      - "recency"
      - "user_rating"
    
  - name: "check_system_status"
    type: "monitoring_api"
    description: "Check current system and service status"
    endpoint: "/api/status/check"
    timeout: 3000
    parameters:
      required: ["service_name"]
      optional: ["region", "component"]
    cache_ttl: 60  # Cache status for 1 minute
    
  - name: "generate_config_file"
    type: "configuration_generator"
    description: "Generate configuration files for user setup"
    timeout: 10000
    parameters:
      required: ["config_type", "user_parameters"]
      optional: ["template_version", "environment"]
    supported_formats:
      - "json"
      - "yaml"
      - "xml"
      - "ini"
      - "properties"
    validation: true
    
  - name: "schedule_callback"
    type: "scheduling"
    description: "Schedule technical callback with specialist"
    provider: "calendly"
    timeout: 5000
    parameters:
      required: ["customer_contact", "issue_summary", "preferred_time"]
      optional: ["specialist_type", "estimated_duration"]
    specialist_types:
      - "general_technical"
      - "network_specialist"
      - "database_expert"
      - "security_specialist"
      - "integration_expert"
    
  - name: "send_solution_summary"
    type: "communication"
    description: "Send detailed solution summary to customer"
    providers: ["email", "sms"]
    timeout: 5000
    parameters:
      required: ["customer_contact", "solution_steps"]
      optional: ["attachments", "follow_up_date"]
    templates:
      - "step_by_step_solution"
      - "troubleshooting_summary"
      - "configuration_guide"
      - "follow_up_instructions"
    
  - name: "escalate_to_engineering"
    type: "escalation"
    description: "Escalate complex technical issues to engineering team"
    timeout: 3000
    parameters:
      required: ["issue_description", "attempted_solutions", "system_details"]
      optional: ["urgency_level", "affected_users", "business_impact"]
    routing_rules:
      application_bugs: "application_team"
      infrastructure_issues: "devops_team"
      security_concerns: "security_team"
      performance_issues: "performance_team"

# Routing Configuration
routing:
  # Primary routing keywords (high confidence)
  primary_keywords:
    - "technical"
    - "troubleshoot"
    - "not working"
    - "error"
    - "bug"
    - "issue"
    - "problem"
    - "broken"
    - "help with"
    - "how to"
    - "setup"
    - "install"
    - "configure"
    - "manual"
    - "documentation"
    
  # Secondary keywords (medium confidence)
  secondary_keywords:
    - "support"
    - "assistance"
    - "guide"
    - "tutorial"
    - "instructions"
    - "steps"
    - "fix"
    - "resolve"
    - "solution"
    - "crash"
    - "slow"
    - "performance"
    
  # Technical context patterns
  context_patterns:
    - "getting an error"
    - "doesn't work"
    - "need help with"
    - "how do I"
    - "step by step"
    - "walk me through"
    - "technical issue"
    - "system problem"
    - "won't start"
    - "keeps crashing"
    
  # Confidence thresholds
  confidence_threshold: 0.70  # Route to this agent if confidence > 70%
  technical_terms_boost: 0.25  # Boost confidence by 25% for technical terms
  
  # Complexity-based routing
  complexity_routing:
    simple_questions: 0.60    # Lower threshold for simple how-to questions
    complex_issues: 0.80      # Higher threshold for complex technical problems
    installation_help: 0.75   # Medium threshold for installation assistance

# Performance Configuration
performance:
  target_response_time_ms: 800   # Target total response time
  max_response_time_ms: 1500     # Maximum acceptable response time
  
  # Caching strategy for technical information
  cache_strategy:
    solutions: 1800            # Cache solutions for 30 min
    system_status: 300         # Cache status for 5 min
    documentation: 3600        # Cache docs for 1 hour
    diagnostic_results: 600    # Cache diagnostics for 10 min
    
  # Load balancing
  load_balancing:
    max_concurrent_sessions: 30
    queue_timeout_seconds: 90   # Longer timeout for complex issues
    priority_queue: false

# Monitoring and Analytics
monitoring:
  # Key performance indicators
  kpis:
    - "average_resolution_time"
    - "first_contact_resolution_rate"
    - "customer_satisfaction_score"
    - "escalation_rate"
    - "solution_accuracy_rate"
    - "knowledge_base_hit_rate"
    
  # Critical alerts
  alerts:
    - condition: "escalation_rate > 15%"
      severity: "warning"
      notification: ["slack", "email"]
    - condition: "response_time > 1500ms"
      severity: "warning"
      notification: ["slack"]
    - condition: "resolution_rate < 80%"
      severity: "critical"
      notification: ["pagerduty", "slack"]
      
  # Business metrics tracking
  business_metrics:
    track_issue_categories: true
    track_solution_types: true
    track_resolution_time_by_complexity: true
    track_knowledge_base_usage: true
    track_escalation_reasons: true

# Security Configuration
security:
  # Data handling for technical support
  data_retention_days: 180     # Keep technical support records for 6 months
  encrypt_system_information: true
  mask_sensitive_config_data: true
  log_all_diagnostic_actions: true
  
  # Access controls
  role_based_access:
    - role: "technical_agent"
      permissions: ["basic_diagnostics", "knowledge_base_access", "ticket_creation"]
    - role: "senior_technical_agent"
      permissions: ["advanced_diagnostics", "system_access", "escalation"]
    - role: "technical_lead"
      permissions: ["all_technical_operations", "team_management"]
  
  # System access restrictions
  diagnostic_restrictions:
    production_systems: "read_only"
    customer_data: "no_access"
    system_configs: "view_only"
    logs: "filtered_access"

# Backup and Failover
failover:
  backup_agent: "general-support"
  health_check_interval: 60    # Check every minute
  max_failures_before_failover: 3
  automatic_recovery: true
  recovery_check_interval: 120  # Check recovery every 2 minutes

# Integration Testing
testing:
  smoke_tests:
    - "knowledge_base_search"
    - "ticket_creation"
    - "diagnostic_script_execution"
    - "system_status_check"
  
  technical_tests:
    test_scenarios:
      - "basic_troubleshooting"
      - "complex_system_issue"
      - "installation_guidance"
      - "configuration_assistance"
      - "escalation_workflow"
    
    diagnostic_tests:
      - "network_diagnostics"
      - "performance_analysis"
      - "configuration_validation"
      - "system_health_check"
    
  load_tests:
    concurrent_sessions: 15
    test_duration_minutes: 20
    success_rate_threshold: 95
    
  knowledge_base_tests:
    search_accuracy_threshold: 90
    response_relevance_threshold: 85
    solution_success_rate_threshold: 80

# Learning and Improvement
continuous_improvement:
  feedback_collection:
    solution_effectiveness: true
    difficulty_rating: true
    clarity_rating: true
    time_to_resolution: true
    
  knowledge_updates:
    auto_update_from_tickets: true
    crowdsource_solutions: true
    expert_review_required: true
    update_frequency: "weekly"
    
  performance_optimization:
    track_common_issues: true
    identify_knowledge_gaps: true
    optimize_search_algorithms: true
    improve_diagnostic_accuracy: true