{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Multi-Agent Voice AI Configuration Schema",
  "description": "JSON Schema for validating agent configuration YAML files",
  "type": "object",
  "required": [
    "agent_id",
    "version",
    "status",
    "metadata",
    "vector_config",
    "specialization",
    "voice_settings",
    "routing",
    "performance"
  ],
  "properties": {
    "agent_id": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
      "minLength": 3,
      "maxLength": 50,
      "description": "Unique identifier for the agent (lowercase, hyphens allowed)"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Semantic version number (e.g., 1.0.0)"
    },
    "status": {
      "type": "string",
      "enum": ["active", "inactive", "testing", "deprecated"],
      "description": "Current status of the agent"
    },
    "last_updated": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp of last configuration update"
    },
    "metadata": {
      "type": "object",
      "required": ["name", "description", "priority_level", "category"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 5,
          "maxLength": 100,
          "description": "Human-readable name for the agent"
        },
        "description": {
          "type": "string",
          "minLength": 20,
          "maxLength": 500,
          "description": "Detailed description of agent purpose and capabilities"
        },
        "priority_level": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5,
          "description": "Priority level (1 = highest, 5 = lowest)"
        },
        "category": {
          "type": "string",
          "enum": [
            "emergency_services",
            "financial_services", 
            "technical_services",
            "customer_service",
            "sales_support",
            "general_services"
          ],
          "description": "Agent category classification"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 2,
            "maxLength": 30
          },
          "minItems": 1,
          "maxItems": 10,
          "uniqueItems": true,
          "description": "Tags for agent categorization and search"
        },
        "created_by": {
          "type": "string",
          "description": "Developer or team who created the agent"
        },
        "team": {
          "type": "string",
          "description": "Team responsible for maintenance"
        },
        "contact": {
          "type": "string",
          "format": "email",
          "description": "Contact email for agent maintainer"
        },
        "documentation_url": {
          "type": "string",
          "format": "uri",
          "description": "URL to detailed documentation"
        }
      },
      "additionalProperties": false
    },
    "vector_config": {
      "type": "object",
      "required": ["qdrant_collection", "vector_size", "distance_metric"],
      "properties": {
        "qdrant_collection": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9_]*[a-z0-9]$",
          "minLength": 3,
          "maxLength": 63,
          "description": "Qdrant collection name (lowercase, underscores allowed)"
        },
        "vector_size": {
          "type": "integer",
          "minimum": 64,
          "maximum": 4096,
          "description": "Vector embedding dimensions"
        },
        "distance_metric": {
          "type": "string",
          "enum": ["cosine", "dot", "euclidean", "manhattan"],
          "description": "Distance metric for vector similarity"
        },
        "faiss_promotion_threshold": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000,
          "description": "Queries per hour threshold for FAISS promotion"
        },
        "redis_cache_ttl": {
          "type": "integer",
          "minimum": 30,
          "maximum": 7200,
          "description": "Redis cache TTL in seconds"
        },
        "auto_optimize_schedule": {
          "type": "string",
          "pattern": "^[0-9\\*\\-\\,\\/\\s]+$",
          "description": "Cron schedule for automatic optimization"
        }
      },
      "additionalProperties": true
    },
    "knowledge_sources": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "documents",
              "api",
              "database", 
              "web_scraping",
              "file_system",
              "external_service",
              "git_repository"
            ]
          },
          "path": {
            "type": "string",
            "description": "File system path for document sources"
          },
          "endpoint": {
            "type": "string",
            "format": "uri",
            "description": "API endpoint URL"
          },
          "auth_type": {
            "type": "string",
            "enum": ["api_key", "bearer_token", "basic_auth", "oauth", "none"]
          },
          "auth_key_env": {
            "type": "string",
            "pattern": "^[A-Z][A-Z0-9_]*[A-Z0-9]$",
            "description": "Environment variable name for authentication"
          },
          "refresh_interval": {
            "type": "integer",
            "minimum": 60,
            "maximum": 86400,
            "description": "Refresh interval in seconds"
          },
          "timeout": {
            "type": "integer",
            "minimum": 1000,
            "maximum": 60000,
            "description": "Timeout in milliseconds"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Knowledge categories"
          },
          "auto_update": {
            "type": "boolean",
            "description": "Enable automatic updates"
          },
          "update_schedule": {
            "type": "string",
            "pattern": "^[0-9\\*\\-\\,\\/\\s]+$",
            "description": "Cron schedule for updates"
          }
        },
        "allOf": [
          {
            "if": {
              "properties": { "type": { "const": "documents" } }
            },
            "then": {
              "required": ["path", "categories"]
            }
          },
          {
            "if": {
              "properties": { "type": { "const": "api" } }
            },
            "then": {
              "required": ["endpoint", "auth_type"]
            }
          },
          {
            "if": {
              "properties": { "type": { "const": "database" } }
            },
            "then": {
              "required": ["connection_string_env", "query"]
            }
          }
        ],
        "additionalProperties": true
      }
    },
    "specialization": {
      "type": "object",
      "required": ["system_prompt", "max_context_tokens", "response_style", "temperature"],
      "properties": {
        "system_prompt": {
          "type": "string",
          "minLength": 100,
          "maxLength": 5000,
          "description": "Detailed system prompt for agent behavior"
        },
        "max_context_tokens": {
          "type": "integer",
          "minimum": 512,
          "maximum": 8192,
          "description": "Maximum context window size in tokens"
        },
        "response_style": {
          "type": "string",
          "enum": [
            "professional",
            "friendly",
            "technical",
            "empathetic",
            "urgent_professional",
            "empathetic_professional",
            "instructional_patient",
            "friendly_professional",
            "friendly_helpful"
          ],
          "description": "Agent communication style"
        },
        "temperature": {
          "type": "number",
          "minimum": 0.0,
          "maximum": 1.0,
          "description": "LLM temperature for response generation"
        },
        "max_response_tokens": {
          "type": "integer",
          "minimum": 50,
          "maximum": 1000,
          "description": "Maximum response length in tokens"
        }
      },
      "additionalProperties": true
    },
    "voice_settings": {
      "type": "object",
      "required": ["tts_voice", "speaking_rate", "personality"],
      "properties": {
        "tts_voice": {
          "type": "string",
          "pattern": "^[a-zA-Z]{2}-[A-Z]{2}-[a-zA-Z0-9\\-]+$",
          "description": "TTS voice identifier (e.g., en-US-Neural2-C)"
        },
        "speaking_rate": {
          "type": "number",
          "minimum": 0.5,
          "maximum": 2.0,
          "description": "Speech rate multiplier (1.0 = normal)"
        },
        "pitch": {
          "type": "number",
          "minimum": -20.0,
          "maximum": 20.0,
          "description": "Voice pitch adjustment in semitones"
        },
        "volume_gain_db": {
          "type": "number",
          "minimum": -10.0,
          "maximum": 10.0,
          "description": "Volume adjustment in decibels"
        },
        "personality": {
          "type": "string",
          "enum": [
            "professional",
            "friendly",
            "empathetic",
            "urgent",
            "helpful_urgent",
            "empathetic_professional",
            "patient_instructor",
            "friendly_helpful"
          ],
          "description": "Voice personality characteristics"
        }
      },
      "additionalProperties": true
    },
    "tools": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "type", "description"],
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[a-z][a-z0-9_]*[a-z0-9]$",
            "minLength": 3,
            "maxLength": 50,
            "description": "Tool identifier (lowercase, underscores allowed)"
          },
          "type": {
            "type": "string",
            "enum": [
              "api_call",
              "database_query",
              "payment_processor",
              "communication",
              "escalation",
              "ticketing_system",
              "scheduling",
              "system_diagnostic",
              "knowledge_search",
              "monitoring_api",
              "configuration_generator",
              "document_generator",
              "financial_tool",
              "agent_routing",
              "system_status",
              "feedback_system",
              "calculation"
            ],
            "description": "Tool type classification"
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "maxLength": 200,
            "description": "Brief description of tool functionality"
          },
          "endpoint": {
            "type": "string",
            "description": "API endpoint or service URL"
          },
          "method": {
            "type": "string",
            "enum": ["GET", "POST", "PUT", "DELETE", "PATCH"],
            "description": "HTTP method for API calls"
          },
          "timeout": {
            "type": "integer",
            "minimum": 1000,
            "maximum": 60000,
            "description": "Timeout in milliseconds"
          },
          "retry_attempts": {
            "type": "integer",
            "minimum": 0,
            "maximum": 5,
            "description": "Number of retry attempts on failure"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Required parameter names"
              },
              "optional": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Optional parameter names"
              }
            },
            "additionalProperties": false
          },
          "cache_ttl": {
            "type": "integer",
            "minimum": 0,
            "maximum": 7200,
            "description": "Cache TTL in seconds (0 = no caching)"
          },
          "security_level": {
            "type": "string",
            "enum": ["low", "medium", "high", "pci_compliant"],
            "description": "Required security level for tool access"
          },
          "rate_limit": {
            "type": "string",
            "pattern": "^\\d+/(second|minute|hour|day)$",
            "description": "Rate limiting specification (e.g., '10/minute')"
          }
        },
        "additionalProperties": true
      }
    },
    "routing": {
      "type": "object",
      "required": ["primary_keywords", "confidence_threshold"],
      "properties": {
        "primary_keywords": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          "minItems": 3,
          "maxItems": 50,
          "uniqueItems": true,
          "description": "Primary keywords for high-confidence routing"
        },
        "secondary_keywords": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          "maxItems": 50,
          "uniqueItems": true,
          "description": "Secondary keywords for medium-confidence routing"
        },
        "context_patterns": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 5,
            "maxLength": 100
          },
          "maxItems": 30,
          "description": "Context patterns that boost routing confidence"
        },
        "confidence_threshold": {
          "type": "number",
          "minimum": 0.1,
          "maximum": 1.0,
          "description": "Minimum confidence score for routing to this agent"
        },
        "priority_patterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "High-priority patterns for immediate routing"
        },
        "fallback_routing": {
          "type": "boolean",
          "description": "Whether this agent accepts fallback routing"
        }
      },
      "additionalProperties": true
    },
    "performance": {
      "type": "object",
      "required": ["target_response_time_ms", "max_response_time_ms"],
      "properties": {
        "target_response_time_ms": {
          "type": "integer",
          "minimum": 100,
          "maximum": 5000,
          "description": "Target response time in milliseconds"
        },
        "max_response_time_ms": {
          "type": "integer",
          "minimum": 200,
          "maximum": 10000,
          "description": "Maximum acceptable response time in milliseconds"
        },
        "cache_strategy": {
          "type": "object",
          "patternProperties": {
            "^[a-z_]+$": {
              "type": "integer",
              "minimum": 30,
              "maximum": 7200
            }
          },
          "description": "Cache TTL values for different data types"
        },
        "load_balancing": {
          "type": "object",
          "properties": {
            "max_concurrent_sessions": {
              "type": "integer",  
              "minimum": 1,
              "maximum": 1000,
              "description": "Maximum concurrent sessions"
            },
            "queue_timeout_seconds": {
              "type": "integer",
              "minimum": 10,
              "maximum": 300,
              "description": "Queue timeout in seconds"
            },
            "priority_queue": {
              "type": "boolean",
              "description": "Enable priority queue processing"
            }
          },
          "additionalProperties": true
        }
      },
      "additionalProperties": true
    },
    "monitoring": {
      "type": "object",
      "properties": {
        "kpis": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "average_response_time",
              "customer_satisfaction_score",
              "successful_dispatch_rate",
              "emergency_escalation_rate",
              "first_call_resolution_rate",
              "average_resolution_time",
              "successful_resolution_rate",
              "refund_processing_success_rate",
              "billing_inquiry_resolution_rate",
              "payment_update_success_rate",
              "first_contact_resolution_rate",
              "solution_accuracy_rate",
              "escalation_rate",
              "knowledge_base_hit_rate",
              "routing_accuracy_rate",
              "information_accuracy_rate",
              "successful_referral_rate",
              "fallback_usage_percentage"
            ]
          },
          "minItems": 3,
          "maxItems": 10,
          "uniqueItems": true,
          "description": "Key Performance Indicators to track"
        },
        "alerts": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["condition", "severity", "notification"],
            "properties": {
              "condition": {
                "type": "string",
                "minLength": 10,
                "description": "Alert condition (e.g., 'response_time > 1000ms')"
              },
              "severity": {
                "type": "string",
                "enum": ["info", "warning", "critical"],
                "description": "Alert severity level"
              },
              "notification": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["email", "slack", "pagerduty", "sms", "webhook"]
                },
                "minItems": 1,
                "description": "Notification channels"
              },
              "description": {
                "type": "string",
                "maxLength": 200,
                "description": "Human-readable alert description"
              }
            },
            "additionalProperties": false
          }
        },
        "business_metrics": {
          "type": "object",
          "patternProperties": {
            "^track_[a-z_]+$": {
              "type": "boolean"
            }
          },
          "description": "Business metrics tracking configuration"
        }
      },
      "additionalProperties": false
    },
    "security": {
      "type": "object",
      "properties": {
        "data_retention_days": {
          "type": "integer",
          "minimum": 1,
          "maximum": 2555,
          "description": "Data retention period in days"
        },
        "pci_compliance": {
          "type": "boolean",
          "description": "PCI compliance requirement"
        },
        "role_based_access": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["role", "permissions"],
            "properties": {
              "role": {
                "type": "string",
                "pattern": "^[a-z][a-z0-9_]*[a-z0-9]$",
                "description": "Role identifier"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "description": "List of permissions for this role"
              }
            },
            "additionalProperties": false
          }
        },
        "audit_logging": {
          "type": "object",
          "patternProperties": {
            "^log_[a-z_]+$": {
              "type": "boolean"
            }
          },
          "description": "Audit logging configuration"
        }
      },
      "additionalProperties": true
    },
    "failover": {
      "type": "object",
      "properties": {
        "backup_agent": {
          "type": ["string", "null"],
          "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
          "description": "Backup agent ID for failover (null if no backup)"
        },
        "health_check_interval": {
          "type": "integer",
          "minimum": 10,
          "maximum": 300,
          "description": "Health check interval in seconds"
        },
        "max_failures_before_failover": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "Maximum failures before triggering failover"
        },
        "automatic_recovery": {
          "type": "boolean",
          "description": "Enable automatic recovery from failover"
        },
        "recovery_check_interval": {
          "type": "integer",
          "minimum": 30,
          "maximum": 600,
          "description": "Recovery check interval in seconds"
        }
      },
      "additionalProperties": true
    },
    "testing": {
      "type": "object",
      "properties": {
        "smoke_tests": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2,
          "description": "List of smoke tests to run"
        },
        "load_tests": {
          "type": "object",
          "properties": {
            "concurrent_sessions": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "test_duration_minutes": {
              "type": "integer",
              "minimum": 1,
              "maximum": 60
            },
            "success_rate_threshold": {
              "type": "integer",
              "minimum": 80,
              "maximum": 100
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": true
    },
    "continuous_improvement": {
      "type": "object",
      "description": "Settings for continuous learning and improvement",
      "additionalProperties": true
    },
    "custom_config": {
      "type": "object",
      "description": "Agent-specific custom configuration",
      "additionalProperties": true
    },
    "environment_overrides": {
      "type": "object",
      "properties": {
        "development": {
          "type": "object",
          "additionalProperties": true
        },
        "staging": {
          "type": "object", 
          "additionalProperties": true
        },
        "production": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "additionalProperties": false,
      "description": "Environment-specific configuration overrides"
    },
    "documentation": {
      "type": "object",
      "properties": {
        "setup_notes": {
          "type": "string",
          "description": "Setup and deployment notes"
        },
        "configuration_notes": {
          "type": "string",
          "description": "Configuration explanation and tips"
        },
        "troubleshooting_notes": {
          "type": "string",
          "description": "Common issues and solutions"
        },
        "changelog": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["version", "date", "changes"],
            "properties": {
              "version": {
                "type": "string",
                "pattern": "^\\d+\\.\\d+\\.\\d+$"
              },
              "date": {
                "type": "string",
                "format": "date"
              },
              "changes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              }
            },
            "additionalProperties": false
          },
          "description": "Version changelog"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "$defs": {
    "cronExpression": {
      "type": "string",
      "pattern": "^[0-9\\*\\-\\,\\/\\s]+$",
      "description": "Valid cron expression"
    },
    "environmentVariable": {
      "type": "string",
      "pattern": "^[A-Z][A-Z0-9_]*[A-Z0-9]$",
      "description": "Valid environment variable name (uppercase, underscores allowed)"
    },
    "agentIdentifier": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
      "minLength": 3,
      "maxLength": 50,
      "description": "Valid agent identifier (lowercase, hyphens allowed)"
    },
    "positiveInteger": {
      "type": "integer",
      "minimum": 1,
      "description": "Positive integer value"
    },
    "probability": {
      "type": "number",
      "minimum": 0.0,
      "maximum": 1.0,
      "description": "Probability value between 0 and 1"
    },
    "timeoutMs": {
      "type": "integer",
      "minimum": 1000,
      "maximum": 60000,
      "description": "Timeout value in milliseconds"
    },
    "ttlSeconds": {
      "type": "integer",
      "minimum": 30,
      "maximum": 86400,
      "description": "Time-to-live value in seconds"
    }
  }
}