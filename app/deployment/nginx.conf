# Revolutionary Multi-Agent Voice AI System - Production Nginx Configuration
# Optimized for ultra-low latency WebSocket streaming and load balancing
# Target: <50ms proxy latency with enterprise-grade security

# ============================================================================
# MAIN CONFIGURATION
# ============================================================================

# Run as non-root user for security
user nginx;

# Optimize worker processes for RunPod instances
worker_processes auto;
worker_rlimit_nofile 65535;

# Error log configuration
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# ============================================================================
# EVENTS CONFIGURATION - Optimized for High Concurrency
# ============================================================================
events {
    # Use epoll for high performance on Linux
    use epoll;
    
    # Maximum concurrent connections per worker
    worker_connections 4096;
    
    # Accept multiple connections at once
    multi_accept on;
    
    # Enable efficient connection handling
    accept_mutex off;
}

# ============================================================================
# HTTP CONFIGURATION
# ============================================================================
http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # ========================================================================
    # PERFORMANCE OPTIMIZATIONS
    # ========================================================================
    
    # Enable sendfile for efficient file serving
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Timeout configurations for voice AI
    keepalive_timeout 65;
    keepalive_requests 10000;
    client_header_timeout 10;
    client_body_timeout 10;
    send_timeout 10;
    
    # Buffer configurations
    client_max_body_size 50M;
    client_body_buffer_size 1M;
    client_header_buffer_size 4k;
    large_client_header_buffers 8 8k;
    
    # ========================================================================
    # COMPRESSION - Reduce bandwidth usage
    # ========================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # ========================================================================
    # LOGGING CONFIGURATION
    # ========================================================================
    
    # Custom log format for voice AI analytics
    log_format voice_ai_format '$remote_addr - $remote_user [$time_local] '
                              '"$request" $status $body_bytes_sent '
                              '"$http_referer" "$http_user_agent" '
                              'rt=$request_time uct="$upstream_connect_time" '
                              'uht="$upstream_header_time" urt="$upstream_response_time" '
                              'sid="$http_x_session_id" aid="$http_x_agent_id"';
    
    # Access log
    access_log /var/log/nginx/access.log voice_ai_format;
    
    # ========================================================================
    # RATE LIMITING - DDoS Protection
    # ========================================================================
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=health:10m rate=5r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # ========================================================================
    # UPSTREAM CONFIGURATION - Load Balancing
    # ========================================================================
    
    # Voice AI application servers
    upstream voice_ai_backend {
        # Load balancing method optimized for voice AI
        least_conn;
        
        # Application instances (adjust based on your scaling)
        server voice-ai-app:8000 max_fails=3 fail_timeout=30s weight=1;
        # server voice-ai-app-2:8000 max_fails=3 fail_timeout=30s weight=1;
        # server voice-ai-app-3:8000 max_fails=3 fail_timeout=30s weight=1;
        
        # Health check configuration
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # ========================================================================
    # SSL/TLS CONFIGURATION
    # ========================================================================
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # ========================================================================
    # SECURITY HEADERS
    # ========================================================================
    
    # Security headers for voice AI application
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # HSTS for HTTPS (uncomment when using SSL)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # ========================================================================
    # MAIN SERVER CONFIGURATION
    # ========================================================================
    
    server {
        # Listen on HTTP (upgrade to HTTPS in production)
        listen 80;
        listen [::]:80;
        
        # Server name (replace with your RunPod domain)
        server_name _;
        
        # Enable HTTP/2
        # http2 on;  # Uncomment when using HTTPS
        
        # Root directory
        root /var/www/html;
        index index.html;
        
        # ====================================================================
        # RATE LIMITING APPLICATION
        # ====================================================================
        
        # Apply connection limit
        limit_conn conn_limit_per_ip 10;
        
        # ====================================================================
        # HEALTH CHECK ENDPOINT
        # ====================================================================
        
        location /health {
            limit_req zone=health burst=10 nodelay;
            
            # Proxy to backend health check
            proxy_pass http://voice_ai_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Quick health check timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            
            # Disable caching for health checks
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            
            access_log off;
        }
        
        # ====================================================================
        # TWILIO WEBHOOK ENDPOINTS - Ultra Low Latency
        # ====================================================================
        
        location /voice/incoming {
            limit_req zone=api burst=20 nodelay;
            
            # Optimize for Twilio webhooks
            proxy_pass http://voice_ai_backend;
            proxy_http_version 1.1;
            
            # Headers for voice processing
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Session-ID $request_id;
            
            # Ultra-low latency timeouts for voice
            proxy_connect_timeout 2s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
            
            # Buffering optimization for real-time
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Connection reuse
            proxy_set_header Connection "";
        }
        
        # ====================================================================
        # WEBSOCKET ENDPOINTS - Real-time Voice Streaming
        # ====================================================================
        
        location ~* ^/ws/voice/(.+)$ {
            limit_req zone=websocket burst=5 nodelay;
            
            # WebSocket proxy configuration
            proxy_pass http://voice_ai_backend;
            proxy_http_version 1.1;
            
            # WebSocket upgrade headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Session tracking
            proxy_set_header X-Session-ID $1;
            proxy_set_header X-Request-ID $request_id;
            
            # WebSocket optimizations
            proxy_connect_timeout 7s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Disable buffering for real-time streaming
            proxy_buffering off;
            proxy_cache off;
            
            # Connection management
            proxy_set_header Connection "upgrade";
            
            # Enable WebSocket compression
            # gzip_proxied any;
        }
        
        # ====================================================================
        # API ENDPOINTS - General Application Routes
        # ====================================================================
        
        location ~ ^/(agents|conversation|metrics|performance) {
            limit_req zone=api burst=50 nodelay;
            
            # Proxy to application
            proxy_pass http://voice_ai_backend;
            proxy_http_version 1.1;
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # API timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Enable caching for some API responses
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            
            # Connection reuse
            proxy_set_header Connection "";
        }
        
        # ====================================================================
        # ROOT AND DOCUMENTATION
        # ====================================================================
        
        location / {
            limit_req zone=api burst=10 nodelay;
            
            # Proxy to FastAPI application
            proxy_pass http://voice_ai_backend;
            proxy_http_version 1.1;
            
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Standard timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Connection reuse
            proxy_set_header Connection "";
        }
        
        # ====================================================================
        # STATIC FILES OPTIMIZATION
        # ====================================================================
        
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Try to serve static files directly, fallback to app
            try_files $uri @backend;
        }
        
        location @backend {
            proxy_pass http://voice_ai_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ====================================================================
        # SECURITY - Block common attacks
        # ====================================================================
        
        # Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to backup files
        location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block PHP execution attempts
        location ~* \.php$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # ====================================================================
        # ERROR PAGES
        # ====================================================================
        
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
    
    # ========================================================================
    # HTTPS SERVER CONFIGURATION (Uncomment for SSL)
    # ========================================================================
    
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     
    #     server_name your-domain.com;
    #     
    #     # SSL certificate configuration
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     # Include the same location blocks as HTTP server
    #     # ... (copy all location blocks from above)
    # }
    
    # HTTP to HTTPS redirect (uncomment when using SSL)
    # server {
    #     listen 80;
    #     listen [::]:80;
    #     server_name your-domain.com;
    #     return 301 https://$server_name$request_uri;
    # }
    
    # ========================================================================
    # MONITORING SERVER (Internal)
    # ========================================================================
    
    server {
        listen 8080;
        server_name localhost;
        
        # Nginx status endpoint
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            deny all;
        }
        
        # Nginx configuration check
        location /nginx_health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

# ============================================================================
# STREAM CONFIGURATION - TCP/UDP Load Balancing (if needed)
# ============================================================================

# Uncomment if you need TCP/UDP load balancing
# stream {
#     upstream voice_stream_backend {
#         server voice-ai-app:8001;
#     }
#     
#     server {
#         listen 8001;
#         proxy_pass voice_stream_backend;
#         proxy_timeout 3s;
#         proxy_responses 1;
#     }
# }

# ============================================================================
# OPTIMIZATION NOTES
# ============================================================================

# Performance Optimizations:
# - Worker processes set to auto (matches CPU cores)
# - Epoll for efficient connection handling
# - HTTP/2 support for multiplexing
# - Connection keep-alive optimization
# - Sendfile for efficient file serving

# Voice AI Specific Optimizations:
# - Ultra-low latency timeouts for voice endpoints
# - WebSocket optimization for real-time streaming
# - Buffering disabled for real-time processing
# - Connection reuse for performance
# - Custom logging for voice analytics

# Security Features:
# - Rate limiting per endpoint type
# - Security headers implementation
# - Hidden file access blocking
# - Attack vector mitigation
# - SSL/TLS ready configuration

# Monitoring & Debugging:
# - Comprehensive access logging
# - Health check endpoints
# - Nginx status monitoring
# - Error page customization
# - Request ID tracking

# RunPod Optimizations:
# - Docker network compatibility
# - Resource-aware configuration
# - Health check integration
# - Container-friendly setup